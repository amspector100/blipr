% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blip.R
\name{BLiP}
\alias{BLiP}
\title{Runs a Bayesian Linear Program (BliP) for resolution-adaptive signal
detection, e.g. for resolution-adaptive variable selection.}
\usage{
BLiP(
  inclusions = NULL,
  cand_groups = NULL,
  weight_fn = "inverse_size",
  error = "fdr",
  q = 0.1,
  max_pep = 1,
  deterministic = T,
  verbose = F,
  perturb = T,
  max_iters = 100,
  search_method = "binary",
  solver = NULL,
  ...
)
}
\arguments{
\item{inclusions}{(N,p)-shaped matrix of posterior samples where a nonzero
value indicates the presence of a signal.}

\item{cand_groups}{A list of lists, where the inner lists must have a
"group" attribute, corresponding to the features in the group
and a "pep" attribute, corresponding to a posterior error probability.}

\item{weight_fn}{How to weight discoveries. Can be one of 'inverse_size'
or 'log_inverse_size'.}

\item{error}{Bayesian error rate to control: one of "fwer", "pfer", "fdr", "local_fdr".}

\item{q}{The level at which to control the Bayesian FWER/PFER/FDR/local FDR.}

\item{max_pep}{Never select any group with a pep greater than max_pep.}

\item{deterministic}{Whether or not BLiP should return a deterministic solution.
Randomized solutions will have (very slightly) more power. Defaults to TRUE.}

\item{verbose}{If TRUE, gives occasional progress reports.}

\item{max_iters}{Maximum number of binary-search iterations for FWER when.}

\item{search_method}{For FWER control, how to find the optimal parameter for
the LP. Either 'binary' (defalt) or 'none'.}
}
\value{
An object with a "selections" attribute, a subsequence of pep_list
which maximizes the utility while controlling a Bayesian error rate
and ensuring all selected groups are disjoint.
}
\description{
Runs a Bayesian Linear Program (BliP) for resolution-adaptive signal
detection, e.g. for resolution-adaptive variable selection.
}
\examples{
cand_groups <- list(list(group=c(1), pep=0.1), list(group=c(2), pep=0.5), list(group=c(1,2), pep=0.01))
detections <- blipr::BLiP(cand_groups=cand_groups, q=0.1, error='fdr')
}
